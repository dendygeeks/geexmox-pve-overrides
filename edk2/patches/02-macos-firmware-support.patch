diff --git a/UefiCpuPkg/CpuDxe/CpuPageTable.c b/UefiCpuPkg/CpuDxe/CpuPageTable.c
index 0a02cb3f6b..2f2bea2b2e 100644
--- a/UefiCpuPkg/CpuDxe/CpuPageTable.c
+++ b/UefiCpuPkg/CpuDxe/CpuPageTable.c
@@ -1068,7 +1068,6 @@ InitializePageTablePool (
   )
 {
   VOID                      *Buffer;
-  BOOLEAN                   IsModified;
 
   //
   // Do not allow re-entrance.
@@ -1078,7 +1077,6 @@ InitializePageTablePool (
   }
 
   mPageTablePoolLock = TRUE;
-  IsModified = FALSE;
 
   //
   // Always reserve at least PAGE_TABLE_POOL_UNIT_PAGES, including one page for
@@ -1124,17 +1122,16 @@ InitializePageTablePool (
     NULL,
     (PHYSICAL_ADDRESS)(UINTN)Buffer,
     EFI_PAGES_TO_SIZE (PoolPages),
-    EFI_MEMORY_RO,
+    0,
     PageActionSet,
     AllocatePageTableMemory,
     NULL,
-    &IsModified
+    NULL
     );
-  ASSERT (IsModified == TRUE);
 
 Done:
   mPageTablePoolLock = FALSE;
-  return IsModified;
+  return TRUE;
 }
 
 /**
@@ -1358,9 +1355,18 @@ InitializePageTableLib (
   //
   if ((*PageTableBase != 0) &&
       (*Attributes & PAGE_TABLE_LIB_PAGING_CONTEXT_IA32_X64_ATTRIBUTES_PAE) != 0) {
-    DisableReadOnlyPageWriteProtect ();
+
+    BOOLEAN IsWpEnabled;
+
+    IsWpEnabled = IsReadOnlyPageWriteProtected();
+    if (IsWpEnabled) {
+      DisableReadOnlyPageWriteProtect();
+    }
     InitializePageTablePool (1);
-    EnableReadOnlyPageWriteProtect ();
+
+    if (IsWpEnabled) {
+      EnableReadOnlyPageWriteProtect (); 
+    }
   }
 
   if (HEAP_GUARD_NONSTOP_MODE || NULL_DETECTION_NONSTOP_MODE) {
